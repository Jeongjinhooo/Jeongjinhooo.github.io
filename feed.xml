<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="https://jeongjinhooo.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://jeongjinhooo.github.io/" rel="alternate" type="text/html" /><updated>2022-06-02T23:20:53+09:00</updated><id>https://jeongjinhooo.github.io/feed.xml</id><title type="html">Jinhonote</title><subtitle>개발공부블로그</subtitle><entry><title type="html">org.springframework.web.context.ContextLoader - Context initialization failed 컨텍스트 초기화 실패 오류</title><link href="https://jeongjinhooo.github.io/error3" rel="alternate" type="text/html" title="org.springframework.web.context.ContextLoader - Context initialization failed 컨텍스트 초기화 실패 오류" /><published>2022-06-01T04:00:00+09:00</published><updated>2022-06-01T04:00:00+09:00</updated><id>https://jeongjinhooo.github.io/error3</id><content type="html" xml:base="https://jeongjinhooo.github.io/error3">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;에러 해결&lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;./error1&quot;&gt;2022-05-16&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;./error2&quot;&gt;2022-05-19&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;./error3&quot;&gt;2022-06-01&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ERROR: org.springframework.web.context.ContextLoader - Context initialization failed
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이렇게 자꾸 에러가 떠서 5시간동안 구글링하면서 찾아보고있는데 알고보니까 memberVO를 memverVO로 오타나서 그런거였다
오타 잘봐야겠다&lt;/p&gt;</content><author><name>Jinho1</name></author><category term="error" /><summary type="html">에러 해결 2022-05-16 2022-05-19 2022-06-01</summary></entry><entry><title type="html">데이터타입</title><link href="https://jeongjinhooo.github.io/memo3" rel="alternate" type="text/html" title="데이터타입" /><published>2022-05-28T04:00:00+09:00</published><updated>2022-05-28T04:00:00+09:00</updated><id>https://jeongjinhooo.github.io/memo3</id><content type="html" xml:base="https://jeongjinhooo.github.io/memo3">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;./memo1&quot;&gt;SQL 정리&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;./memo2&quot;&gt;JAVA 정리&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;./memo3&quot;&gt;데이터 타입&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;./memo4&quot;&gt;JAVA final&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;h6 id=&quot;char-타입&quot;&gt;CHAR 타입&lt;/h6&gt;

&lt;ul&gt;
  &lt;li&gt;고정길이 문자 데이터(Alphanumeric)&lt;/li&gt;
  &lt;li&gt;최대 길이 : 255 byte (default = 1byte)&lt;/li&gt;
  &lt;li&gt;다른 타입에 비해 제한이 적다&lt;/li&gt;
  &lt;li&gt;일부 입력시 BLANK 가 자동으로 채워짐&lt;/li&gt;
  &lt;li&gt;지정된 길이보다 길면 입력시 에러가 발생&lt;/li&gt;
  &lt;li&gt;전혀 값을 주지 않으면 NULL 상태로 입력&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;varchar2-타입&quot;&gt;VARCHAR2 타입&lt;/h6&gt;

&lt;ul&gt;
  &lt;li&gt;가변길이 문자 데이터(Alphanumeric)&lt;/li&gt;
  &lt;li&gt;최대 길이 : 2000 (반드시 길이 지정)&lt;/li&gt;
  &lt;li&gt;다른 타입에 비해 제한이 적다&lt;/li&gt;
  &lt;li&gt;일부만 입력시 뒷부분은 NULL&lt;/li&gt;
  &lt;li&gt;입력한 값의 뒷부분에 있는 BLANK도 같이 입력&lt;/li&gt;
  &lt;li&gt;지정된 길이보다 길면 입력시 에러 발생&lt;/li&gt;
  &lt;li&gt;전혀 값을 주지 않으면 NULL 상태 입력&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;number-타입&quot;&gt;NUMBER 타입&lt;/h6&gt;

&lt;ul&gt;
  &lt;li&gt;음수, ZERO, 양수 저장&lt;/li&gt;
  &lt;li&gt;범위 : 1.0 x 10 ~ 9.9…9 x 10&lt;/li&gt;
  &lt;li&gt;전체 자리수는 38자리를 넘을 수 없다&lt;/li&gt;
  &lt;li&gt;소수점은 -84 ~ 127&lt;/li&gt;
  &lt;li&gt;소수점이 지정되지 않았을 때 소수점이 입력되거나, 지정된 소수점자리 이상 입력되면 반올림되어 저장&lt;/li&gt;
  &lt;li&gt;지정한 정수 자리수 이상 입력시 에러&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;date-타입&quot;&gt;DATE 타입&lt;/h6&gt;

&lt;ul&gt;
  &lt;li&gt;일자와 시간을 저장&lt;/li&gt;
  &lt;li&gt;포함정보 : 세기, 년도, 월, 일, 시간, 분, 초&lt;/li&gt;
  &lt;li&gt;NLS_DATE_FORMAT을 이용하여 국가별 특수성을 해결&lt;/li&gt;
  &lt;li&gt;특별히 시간을 지정하지 않으면 00:00:00&lt;/li&gt;
  &lt;li&gt;특별히 일자를 지정하지 않았다면 현재월의 1일로 지정됨&lt;/li&gt;
  &lt;li&gt;SYSDATE는 현재일과 시간을 제공&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;long-타입&quot;&gt;LONG 타입&lt;/h6&gt;

&lt;ul&gt;
  &lt;li&gt;2 GIGA 바이트(2 -1)의 가변길이 문자 저장&lt;/li&gt;
  &lt;li&gt;VARCHAR2와 유사한 특징을 가진다&lt;/li&gt;
  &lt;li&gt;아주 긴 문자열 (편지, 처방전, 각종 서술문)에 사용&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;raw-long-raw-rowid-타입&quot;&gt;RAW, LONG RAW, ROWID 타입&lt;/h6&gt;

&lt;ul&gt;
  &lt;li&gt;그래픽 IMAGE 나 디지탈 SOUND를 저장&lt;/li&gt;
  &lt;li&gt;HEXA-DECIMAL 형태로 RETURN&lt;/li&gt;
  &lt;li&gt;RAW는 VARCHAR2와 유사&lt;/li&gt;
  &lt;li&gt;LONG RAW는 LONG과 유사&lt;/li&gt;
  &lt;li&gt;사진등의 IMAGE, SOUND 저장&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;출처 : http://wiki.gurubee.net/pages/viewpage.action?pageId=1507641&amp;amp;&lt;/p&gt;</content><author><name>Jinho1</name></author><category term="memo" /><summary type="html">SQL 정리 JAVA 정리 데이터 타입 JAVA final CHAR 타입</summary></entry><entry><title type="html">JAVA final 이란</title><link href="https://jeongjinhooo.github.io/memo4" rel="alternate" type="text/html" title="JAVA final 이란" /><published>2022-05-28T04:00:00+09:00</published><updated>2022-05-28T04:00:00+09:00</updated><id>https://jeongjinhooo.github.io/memo4</id><content type="html" xml:base="https://jeongjinhooo.github.io/memo4">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;./memo1&quot;&gt;SQL 정리&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;./memo2&quot;&gt;JAVA 정리&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;./memo3&quot;&gt;데이터 타입&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;./memo4&quot;&gt;JAVA final&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;final&quot;&gt;final&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;변수(variable), 메서드(method), 클래스(class)에 사용&lt;/li&gt;
  &lt;li&gt;어떤 곳에 사용되냐에 따라 다른 의미를 가진다&lt;/li&gt;
  &lt;li&gt;무언가를 제한한다는 의미를 가지는 것은 공통적이 성격이다&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;변수variable&quot;&gt;변수(variable)&lt;/h6&gt;

&lt;ul&gt;
  &lt;li&gt;변수에 final을 붙이면 이 변수는 수정할 수 없다는 의미&lt;/li&gt;
  &lt;li&gt;수정 할 수 없다는 범위는 그 변수의 값에 한정&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;메서드method&quot;&gt;메서드(method)&lt;/h6&gt;

&lt;ul&gt;
  &lt;li&gt;메서드에 final을 붙이면 override를 제한&lt;/li&gt;
  &lt;li&gt;상속 받은 클래스에서 해당 메서드를 수정해서 사용하지 못하도록 할 수 있는 것&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;클래스class&quot;&gt;클래스(Class)&lt;/h6&gt;

&lt;ul&gt;
  &lt;li&gt;final 키워드를 클래스에 붙이면 상속 불가능 클래스&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Jinho1</name></author><category term="memo" /><summary type="html">SQL 정리 JAVA 정리 데이터 타입 JAVA final</summary></entry><entry><title type="html">반복문</title><link href="https://jeongjinhooo.github.io/algorithm3" rel="alternate" type="text/html" title="반복문" /><published>2022-05-24T04:00:00+09:00</published><updated>2022-05-24T04:00:00+09:00</updated><id>https://jeongjinhooo.github.io/algorithm3</id><content type="html" xml:base="https://jeongjinhooo.github.io/algorithm3">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;백준 문제 연습&lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;./algorithm1&quot;&gt;입출력과 사칙연산&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./algorithm2&quot;&gt;조건문&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./algorithm3&quot;&gt;반복문&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;

&lt;h6 id=&quot;문제-2739&quot;&gt;문제 2739&lt;/h6&gt;
&lt;p&gt;&lt;br /&gt;
N을 입력받은 뒤, 구구단 N단을 출력하는 프로그램을 작성하시오. 출력 형식에 맞춰서 출력하면 된다.&lt;/p&gt;

&lt;h6 id=&quot;풀이&quot;&gt;풀이&lt;/h6&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import java.util.Scanner;
public class Main {
	public static void main(String[] args) {
 
		Scanner in = new Scanner(System.in);	
		int a = in.nextInt();
		
		in.close();		
		
		for(int i = 1; i&amp;lt;10;i++) {
			System.out.println(a+&quot; * &quot;+i+&quot; = &quot;+(a*i));
		}
	}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h6 id=&quot;문제-10950&quot;&gt;문제 10950&lt;/h6&gt;
&lt;p&gt;&lt;br /&gt;
두 정수 A와 B를 입력받은 다음, A+B를 출력하는 프로그램을 작성하시오.&lt;/p&gt;

&lt;p&gt;첫째 줄에 테스트 케이스의 개수 T가 주어진다.&lt;/p&gt;

&lt;p&gt;각 테스트 케이스는 한 줄로 이루어져 있으며, 각 줄에 A와 B가 주어진다. (0 &amp;lt; A, B &amp;lt; 10)&lt;/p&gt;

&lt;p&gt;각 테스트 케이스마다 A+B를 출력한다.&lt;/p&gt;

&lt;h6 id=&quot;풀이-1&quot;&gt;풀이&lt;/h6&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import java.util.Scanner;
 
public class Main {
	public static void main(String args[]) {
 
		Scanner in = new Scanner(System.in);  
 
		int c = in.nextInt();            //테스트 케이스의 개수
		int arr[] = new int[c];
 
		for (int i = 0; i &amp;lt; c; i++) {   // 테스트 케이스 개수만큼 반복
			int a = in.nextInt();
			int b = in.nextInt();
			arr[i] = a + b;           
		}
		in.close();
 
		for (int k : arr) {      // arr의 객체를 꺼내서 k에 넣는다
			System.out.println(k); 
		}
	}
 
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h6 id=&quot;문제-8393&quot;&gt;문제 8393&lt;/h6&gt;
&lt;p&gt;&lt;br /&gt;
n이 주어졌을 때, 1부터 n까지 합을 구하는 프로그램을 작성하시오.&lt;/p&gt;

&lt;h6 id=&quot;풀이-2&quot;&gt;풀이&lt;/h6&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import java.util.Scanner;
 
public class Main {
 
	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
 
		int a = in.nextInt();
		in.close();
		int sum = 0;
        
		for (int i = 1; i &amp;lt;= a; i++) {
			sum += i;
		}
		System.out.println(sum);
	}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Jinho1</name></author><category term="algorithm" /><summary type="html">백준 문제 연습 입출력과 사칙연산 조건문 반복문</summary></entry><entry><title type="html">JAVA 웹을 다루는 기술 - 29장</title><link href="https://jeongjinhooo.github.io/javaweb29" rel="alternate" type="text/html" title="JAVA 웹을 다루는 기술 - 29장" /><published>2022-05-22T04:00:00+09:00</published><updated>2022-05-22T04:00:00+09:00</updated><id>https://jeongjinhooo.github.io/javaweb29</id><content type="html" xml:base="https://jeongjinhooo.github.io/javaweb29">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb4&quot;&gt;JAVA 웹을 다루는 기술 - 4장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb5&quot;&gt;JAVA 웹을 다루는 기술 - 5장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb6&quot;&gt;JAVA 웹을 다루는 기술 - 6,7장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb8&quot;&gt;JAVA 웹을 다루는 기술 - 8장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb9&quot;&gt;JAVA 웹을 다루는 기술 - 9장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb10&quot;&gt;JAVA 웹을 다루는 기술 - 10장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb11&quot;&gt;JAVA 웹을 다루는 기술 - 11,12장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb13&quot;&gt;JAVA 웹을 다루는 기술 - 13,14장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb17&quot;&gt;JAVA 웹을 다루는 기술 - 17장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb18&quot;&gt;JAVA 웹을 다루는 기술 - 18,19장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb23&quot;&gt;JAVA 웹을 다루는 기술 - 23장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb25&quot;&gt;JAVA 웹을 다루는 기술 - 25,26장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb27&quot;&gt;JAVA 웹을 다루는 기술 - 27,28장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb29&quot;&gt;JAVA 웹을 다루는 기술 - 29장&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;p&gt;본 포스팅은 “자바 웹을 다루는 기술/이병승 저” 를 읽고 학습한 내용을 정리한 것입니다.&lt;/p&gt;

&lt;h3 id=&quot;rest&quot;&gt;REST&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Representational State Transfer의 약자로, 하나의 URI가 고유한 리소스를 처리하는 공통 방식&lt;/li&gt;
  &lt;li&gt;REST 방식으로 제공되는 API를 REST API(도는 RESTful API)라고 하며, 이는 트위터와 같은 Open API에서 많이 사용&lt;/li&gt;
  &lt;li&gt;REST 방식은 서버에 데이터 조회뿐만 아니라 추가, 수정, 삭제 작업 요청 시 HTTP 메서드를 이용함&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;http-메서드의-기능&quot;&gt;HTTP 메서드의 기능&lt;/h5&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;메서드&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;설명&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;POST&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;추가(Create)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;GET&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;조회(Select)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;PUT&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;수정(Update)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;DELETE&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;삭제(Delete)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h6 id=&quot;rest-방식으로-요청하는-uri-형식&quot;&gt;REST 방식으로 요청하는 URI 형식&lt;/h6&gt;
&lt;p&gt;&lt;br /&gt;
/작업명/기본키+메서드+데이터&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;작업명 : 요청하는 작업 종류&lt;/li&gt;
  &lt;li&gt;기본키 : 요청하는 작업에 해당하는 대상의 기본키&lt;/li&gt;
  &lt;li&gt;메서드 : 요청하는 기능&lt;/li&gt;
  &lt;li&gt;데이터 : 기능 수행에 필요한 JSON 데이터&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;pathvariable&quot;&gt;@PathVariable&lt;/h6&gt;
&lt;p&gt;브라우저에서 요청 URL로 전달된 매개변수를 가져올 수 있음&lt;/p&gt;

&lt;h6 id=&quot;requestbody&quot;&gt;@RequestBody&lt;/h6&gt;
&lt;p&gt;브라우저에서 전달되는 JSON 데이터를 객체로 자동 변환해줌&lt;/p&gt;

&lt;h6 id=&quot;responsebody&quot;&gt;@ResponseBody&lt;/h6&gt;
&lt;p&gt;JSP가 아닌 텍스트나 JSON으로 결과를 전송할 수 있음&lt;/p&gt;

&lt;h6 id=&quot;responseentity&quot;&gt;@ResponseEntity&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;@RestController는 별도의 View를 제공하지 않은 채 데이터를 전달하므로 전달 과정에서 예외가 발생할 수 있음&lt;/li&gt;
  &lt;li&gt;예외에 대해 좀 더 세밀한 제어가 필요한 경우 ResponseEntity 클래스를 사용함&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Jinho1</name></author><category term="java" /><summary type="html">JAVA 웹을 다루는 기술 - 4장 JAVA 웹을 다루는 기술 - 5장 JAVA 웹을 다루는 기술 - 6,7장 JAVA 웹을 다루는 기술 - 8장 JAVA 웹을 다루는 기술 - 9장 JAVA 웹을 다루는 기술 - 10장 JAVA 웹을 다루는 기술 - 11,12장 JAVA 웹을 다루는 기술 - 13,14장 JAVA 웹을 다루는 기술 - 17장 JAVA 웹을 다루는 기술 - 18,19장 JAVA 웹을 다루는 기술 - 23장 JAVA 웹을 다루는 기술 - 25,26장 JAVA 웹을 다루는 기술 - 27,28장 JAVA 웹을 다루는 기술 - 29장 본 포스팅은 “자바 웹을 다루는 기술/이병승 저” 를 읽고 학습한 내용을 정리한 것입니다.</summary></entry><entry><title type="html">org.springframework.web.context.ContextLoaderListener의 애플리케이션 리스너를 설정하는 중 오류 발생</title><link href="https://jeongjinhooo.github.io/error2" rel="alternate" type="text/html" title="org.springframework.web.context.ContextLoaderListener의 애플리케이션 리스너를 설정하는 중 오류 발생" /><published>2022-05-19T04:00:00+09:00</published><updated>2022-05-19T04:00:00+09:00</updated><id>https://jeongjinhooo.github.io/error2</id><content type="html" xml:base="https://jeongjinhooo.github.io/error2">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;에러 해결&lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;./error1&quot;&gt;2022-05-16&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;./error2&quot;&gt;2022-05-19&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;./error3&quot;&gt;2022-06-01&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;전에 하던 예제를 복사해서 Maven 사용 실습하고 있었는데 실행이 안되서 찾아보니&lt;br /&gt;
Maven - Update Project 실행시 maven 라이브러리 경로가 삭제되는 현상이 발생해서 그렇다고한다.&lt;/p&gt;

&lt;h6 id=&quot;문제-해결-방법&quot;&gt;문제 해결 방법&lt;/h6&gt;
&lt;p&gt;프로젝트 우클릭 - properties
Deployment Assembly - Add 버튼 - Java Build Path Entries - Maven Dependencies 선택 - Apply버튼&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/image00/error2.PNG&quot; alt=&quot;Alt text&quot; /&gt;&lt;/p&gt;</content><author><name>Jinho1</name></author><category term="error" /><summary type="html">에러 해결 2022-05-16 2022-05-19 2022-06-01</summary></entry><entry><title type="html">JAVA 웹을 다루는 기술 - 27, 28장</title><link href="https://jeongjinhooo.github.io/javaweb27" rel="alternate" type="text/html" title="JAVA 웹을 다루는 기술 - 27, 28장" /><published>2022-05-18T04:00:00+09:00</published><updated>2022-05-18T04:00:00+09:00</updated><id>https://jeongjinhooo.github.io/javaweb27</id><content type="html" xml:base="https://jeongjinhooo.github.io/javaweb27">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb4&quot;&gt;JAVA 웹을 다루는 기술 - 4장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb5&quot;&gt;JAVA 웹을 다루는 기술 - 5장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb6&quot;&gt;JAVA 웹을 다루는 기술 - 6,7장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb8&quot;&gt;JAVA 웹을 다루는 기술 - 8장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb9&quot;&gt;JAVA 웹을 다루는 기술 - 9장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb10&quot;&gt;JAVA 웹을 다루는 기술 - 10장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb11&quot;&gt;JAVA 웹을 다루는 기술 - 11,12장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb13&quot;&gt;JAVA 웹을 다루는 기술 - 13,14장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb17&quot;&gt;JAVA 웹을 다루는 기술 - 17장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb18&quot;&gt;JAVA 웹을 다루는 기술 - 18,19장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb23&quot;&gt;JAVA 웹을 다루는 기술 - 23장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb25&quot;&gt;JAVA 웹을 다루는 기술 - 25,26장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb27&quot;&gt;JAVA 웹을 다루는 기술 - 27,28장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb29&quot;&gt;JAVA 웹을 다루는 기술 - 29장&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;p&gt;본 포스팅은 “자바 웹을 다루는 기술/이병승 저” 를 읽고 학습한 내용을 정리한 것입니다.&lt;/p&gt;

&lt;h3 id=&quot;메이븐maven&quot;&gt;메이븐(Maven)&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;프로젝트 구조와 내용을 기술하는 선언적 접근 방식의 오픈소스 빌드 툴&lt;/li&gt;
  &lt;li&gt;프로젝트 종속 라이브러리들과 그 라이브러리에 의존(Dependency)하는 자원까지 관리할 수 있음&lt;/li&gt;
  &lt;li&gt;프로젝트 전반의 리소스 관리와 설정 파일 그리고 이와 관련된 표준 디렉터리 구조를 처음부터 일관된 형태로 구성하여 관리할 수 있음&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;log4j&quot;&gt;log4j&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;로그 기능을 제공하는 오픈 소스 라이브러리&lt;/li&gt;
  &lt;li&gt;애플리케이션에서 웹 사이트에 접속한 사용자 정보나 각 클래스의 메서드호출 시각 등 여러가지 정보를 로그로 출력해서 관리&lt;/li&gt;
  &lt;li&gt;메이븐에선 프로젝트 생성 시 자동으로 log4j 라이브러리가 설치됨&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;타일즈tiles&quot;&gt;타일즈(tiles)&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;화면의 레이아웃 기능을 제공하는 오픈 소스 라이브러리&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;특징&quot;&gt;특징&lt;/h6&gt;

&lt;ul&gt;
  &lt;li&gt;페이지 레이아웃을 쉽고 단순하게 구현할 수 있음&lt;/li&gt;
  &lt;li&gt;공통된 레이아웃을 사용하므로 유지관리가 용이함&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;commonsmultipartresolver-클래스&quot;&gt;CommonsMultipartResolver 클래스&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
여러 개의 파일을 한꺼번에 업로드할 수 있음&lt;/p&gt;

&lt;h3 id=&quot;인터셉터interceptor&quot;&gt;인터셉터(Interceptor)&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;브라우저요청 시 요청 메서드 호출 전후에 개발자가 원하는 기능을 수행함&lt;/li&gt;
  &lt;li&gt;필터와 기능이 유사하지만 필터보다 좀 더 자유롭게 위치를 변경해서 기능을 수행함&lt;/li&gt;
  &lt;li&gt;쿠키(Cookie) 제어, 파일 업로드 등의 작업을 수행함&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Jinho1</name></author><category term="java" /><summary type="html">JAVA 웹을 다루는 기술 - 4장 JAVA 웹을 다루는 기술 - 5장 JAVA 웹을 다루는 기술 - 6,7장 JAVA 웹을 다루는 기술 - 8장 JAVA 웹을 다루는 기술 - 9장 JAVA 웹을 다루는 기술 - 10장 JAVA 웹을 다루는 기술 - 11,12장 JAVA 웹을 다루는 기술 - 13,14장 JAVA 웹을 다루는 기술 - 17장 JAVA 웹을 다루는 기술 - 18,19장 JAVA 웹을 다루는 기술 - 23장 JAVA 웹을 다루는 기술 - 25,26장 JAVA 웹을 다루는 기술 - 27,28장 JAVA 웹을 다루는 기술 - 29장 본 포스팅은 “자바 웹을 다루는 기술/이병승 저” 를 읽고 학습한 내용을 정리한 것입니다.</summary></entry><entry><title type="html">조건문</title><link href="https://jeongjinhooo.github.io/algorithm2" rel="alternate" type="text/html" title="조건문" /><published>2022-05-17T04:00:00+09:00</published><updated>2022-05-17T04:00:00+09:00</updated><id>https://jeongjinhooo.github.io/algorithm2</id><content type="html" xml:base="https://jeongjinhooo.github.io/algorithm2">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;백준 문제 연습&lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;./algorithm1&quot;&gt;입출력과 사칙연산&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./algorithm2&quot;&gt;조건문&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./algorithm3&quot;&gt;반복문&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;

&lt;h6 id=&quot;문제-1330&quot;&gt;문제 1330&lt;/h6&gt;
&lt;p&gt;&lt;br /&gt;
첫째 줄에 다음 세 가지 중 하나를 출력한다.&lt;/p&gt;

&lt;p&gt;A가 B보다 큰 경우에는 ‘&amp;gt;’를 출력한다.
A가 B보다 작은 경우에는 ‘&amp;lt;’를 출력한다.
A와 B가 같은 경우에는 ‘==’를 출력한다.&lt;/p&gt;

&lt;h6 id=&quot;풀이&quot;&gt;풀이&lt;/h6&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import java.util.Scanner;
public class Main {
 
	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		
		int A = in.nextInt();
		int B = in.nextInt();
		
		in.close();
        
		if(A&amp;gt;B) System.out.println(&quot;&amp;gt;&quot;);
		else if(A&amp;lt;B) System.out.println(&quot;&amp;lt;&quot;);
		else System.out.println(&quot;==&quot;);
	}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h6 id=&quot;문제-9498&quot;&gt;문제 9498&lt;/h6&gt;
&lt;p&gt;&lt;br /&gt;
시험 점수를 입력받아 90 ~ 100점은 A, 80 ~ 89점은 B, 70 ~ 79점은 C, 60 ~ 69점은 D, 나머지 점수는 F를 출력하는 프로그램을 작성하시오.&lt;/p&gt;

&lt;h6 id=&quot;풀이-1&quot;&gt;풀이&lt;/h6&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import java.util.Scanner;
public class Main {
 
	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		
		int A = in.nextInt();
		in.close();
		
		if(A&amp;gt;=90) System.out.println(&quot;A&quot;);
		else if(A&amp;gt;=80) System.out.println(&quot;B&quot;);
		else if (A&amp;gt;=70) System.out.println(&quot;C&quot;);
		else if(A&amp;gt;=60) System.out.println(&quot;D&quot;);
		else System.out.println(&quot;F&quot;);
	}
 
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h6 id=&quot;문제-2753&quot;&gt;문제 2753&lt;/h6&gt;
&lt;p&gt;&lt;br /&gt;
연도가 주어졌을 때, 윤년이면 1, 아니면 0을 출력하는 프로그램을 작성하시오.&lt;br /&gt;
윤년은 연도가 4의 배수이면서, 100의 배수가 아닐 때 또는 400의 배수일 때이다.&lt;/p&gt;

&lt;h6 id=&quot;풀이-2&quot;&gt;풀이&lt;/h6&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import java.util.Scanner;
 
public class Main {
 
	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		
		int y = in.nextInt();
		in.close();
        
		if(y%4==0) {
			if(y%400==0) System.out.println(&quot;1&quot;);
			else if(y%100==0) System.out.println(&quot;0&quot;);
			else System.out.println(&quot;1&quot;);
		}
		else System.out.println(&quot;0&quot;);
	}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h6 id=&quot;문제-14681&quot;&gt;문제 14681&lt;/h6&gt;
&lt;p&gt;&lt;br /&gt;
점 (x, y)의 사분면 번호(1, 2, 3, 4 중 하나)를 출력한다.&lt;/p&gt;

&lt;h6 id=&quot;풀이-3&quot;&gt;풀이&lt;/h6&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import java.util.Scanner;
 
public class Main {
 
	public static void main(String[] args) {
 
		Scanner in = new Scanner(System.in);
        
		int X = in.nextInt();
		int Y = in.nextInt();
		
		if(X &amp;gt; 0) {
			if(Y &amp;gt; 0) {
				System.out.print(1);
			} 
			else {
				System.out.print(4);
			}
		} 
		
		else {
			if(Y &amp;gt; 0) {
				System.out.print(2);
			} 
			else {
				System.out.print(3);
			}
		}
	}
 
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h6 id=&quot;문제-2884&quot;&gt;문제 2884&lt;/h6&gt;
&lt;p&gt;&lt;br /&gt;
첫째 줄에 두 정수 H와 M이 주어진다. (0 ≤ H ≤ 23, 0 ≤ M ≤ 59) 그리고 이것은 현재 상근이가 설정한 놓은 알람 시간 H시 M분을 의미한다.
입력 시간은 24시간 표현을 사용한다. 24시간 표현에서 하루의 시작은 0:0(자정)이고, 끝은 23:59(다음날 자정 1분 전)이다. 시간을 나타낼 때, 불필요한 0은 사용하지 않는다.&lt;/p&gt;

&lt;h6 id=&quot;풀이-4&quot;&gt;풀이&lt;/h6&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import java.util.Scanner;
 
public class Main {
	public static void main(String[] args) {
    
		Scanner in = new Scanner(System.in);
		
		int H = in.nextInt(); // 시
		int M = in.nextInt(); // 분
		in.close();
		
		if(M &amp;lt; 45) {
			H--;		// 시(hour) 1 감소
			M= 60 - (45 - M); 	// 분(min) 감소
			if(H &amp;lt; 0) {
				H = 23;
			}
			System.out.println(H + &quot; &quot; + M);
		}
		else {
			System.out.println(H + &quot; &quot; + (M - 45));
		}
	}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h6 id=&quot;문제-2525&quot;&gt;문제 2525&lt;/h6&gt;
&lt;p&gt;&lt;br /&gt;
첫째 줄에는 현재 시각이 나온다. 현재 시각은 시 A (0 ≤ A ≤ 23) 와 분 B (0 ≤ B ≤ 59)가 정수로 빈칸을 사이에 두고 순서대로 주어진다. 두 번째 줄에는 요리하는 데 필요한 시간 C (0 ≤ C ≤ 1,000)가 분 단위로 주어진다. 
첫째 줄에 종료되는 시각의 시와 분을 공백을 사이에 두고 출력한다. (단, 시는 0부터 23까지의 정수, 분은 0부터 59까지의 정수이다. 디지털 시계는 23시 59분에서 1분이 지나면 0시 0분이 된다.)&lt;/p&gt;

&lt;h6 id=&quot;풀이-5&quot;&gt;풀이&lt;/h6&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import java.util.*;
 
class Main {
      public static void main(String[] args) {
          Scanner sc=new Scanner(System.in);
          int h=sc.nextInt();   // 시
          int m=sc.nextInt();   // 분
          int c =sc.nextInt();  // 요리 시간
          
          m+=c;                 // 분 + 요리 시간
          if(m&amp;gt;=60) {           
              while(m&amp;gt;=60) {   // 60분 넘어가면
                  m-=60;       // 60 빼주고
                  h++;         // 1시간 증가
                  if(h&amp;gt;=24) {  //24 넘으면 0으로 
                      h=0;
                  }
              }
          }
          System.out.println(h+&quot; &quot;+m); //공백두고 출력
}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h6 id=&quot;문제-2480&quot;&gt;문제 2480&lt;/h6&gt;
&lt;p&gt;&lt;br /&gt;
1에서부터 6까지의 눈을 가진 3개의 주사위를 던져서 다음과 같은 규칙에 따라 상금을 받는 게임이 있다.&lt;/p&gt;

&lt;p&gt;같은 눈이 3개가 나오면 10,000원+(같은 눈)×1,000원의 상금을 받게 된다. 
같은 눈이 2개만 나오는 경우에는 1,000원+(같은 눈)×100원의 상금을 받게 된다. 
모두 다른 눈이 나오는 경우에는 (그 중 가장 큰 눈)×100원의 상금을 받게 된다.&lt;br /&gt;
예를 들어, 3개의 눈 3, 3, 6이 주어지면 상금은 1,000+3×100으로 계산되어 1,300원을 받게 된다. 또 3개의 눈이 2, 2, 2로 주어지면 10,000+2×1,000 으로 계산되어 12,000원을 받게 된다. 3개의 눈이 6, 2, 5로 주어지면 그중 가장 큰 값이 6이므로 6×100으로 계산되어 600원을 상금으로 받게 된다.&lt;/p&gt;

&lt;p&gt;3개 주사위의 나온 눈이 주어질 때, 상금을 계산하는 프로그램을 작성 하시오.&lt;/p&gt;
&lt;h6 id=&quot;풀이-6&quot;&gt;풀이&lt;/h6&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import java.util.*;

public class Main {

public static void main(String[] args) {
	Scanner sc = new Scanner(System.in);
	int a = sc.nextInt();
	int b = sc.nextInt();
	int c = sc.nextInt();
	if(a == b &amp;amp;&amp;amp; a == c &amp;amp;&amp;amp; b == c)         // a,b,c가 같을 때
	{
		System.out.print(10000+(a*1000));    
	}
	else if(a == b || a == c)             // a b,a c가 같을 때
	{
		System.out.print(1000+(a*100)); 
	}
	else if(b == c)
	{
		System.out.print(1000+(b*100));  // b c 가 같을 때
	}
	else
	{
		System.out.print((Math.max(a, Math.max(b, c))*100));   // Math.max()를 사용해 a b c 중 큰 값 구하기
	}
	}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;두 인자 값 중 큰 값을 리턴하는 함수인 Math.max()를 사용했다&lt;/p&gt;</content><author><name>Jinho1</name></author><category term="algorithm" /><summary type="html">백준 문제 연습 입출력과 사칙연산 조건문 반복문</summary></entry><entry><title type="html">JAVA 웹을 다루는 기술 - 25, 26장</title><link href="https://jeongjinhooo.github.io/javaweb25" rel="alternate" type="text/html" title="JAVA 웹을 다루는 기술 - 25, 26장" /><published>2022-05-17T04:00:00+09:00</published><updated>2022-05-17T04:00:00+09:00</updated><id>https://jeongjinhooo.github.io/javaweb25</id><content type="html" xml:base="https://jeongjinhooo.github.io/javaweb25">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb4&quot;&gt;JAVA 웹을 다루는 기술 - 4장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb5&quot;&gt;JAVA 웹을 다루는 기술 - 5장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb6&quot;&gt;JAVA 웹을 다루는 기술 - 6,7장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb8&quot;&gt;JAVA 웹을 다루는 기술 - 8장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb9&quot;&gt;JAVA 웹을 다루는 기술 - 9장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb10&quot;&gt;JAVA 웹을 다루는 기술 - 10장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb11&quot;&gt;JAVA 웹을 다루는 기술 - 11,12장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb13&quot;&gt;JAVA 웹을 다루는 기술 - 13,14장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb17&quot;&gt;JAVA 웹을 다루는 기술 - 17장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb18&quot;&gt;JAVA 웹을 다루는 기술 - 18,19장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb23&quot;&gt;JAVA 웹을 다루는 기술 - 23장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb25&quot;&gt;JAVA 웹을 다루는 기술 - 25,26장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb27&quot;&gt;JAVA 웹을 다루는 기술 - 27,28장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb29&quot;&gt;JAVA 웹을 다루는 기술 - 29장&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;p&gt;본 포스팅은 “자바 웹을 다루는 기술/이병승 저” 를 읽고 학습한 내용을 정리한 것입니다.&lt;/p&gt;

&lt;h3 id=&quot;트랜잭션transaction&quot;&gt;트랜잭션(Transaction)&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;여러 개의 DML 명령문을 하나의 논리적인 작업 단위로 묶어서 관리하는것&lt;/li&gt;
  &lt;li&gt;All 또는 Nothing 방식으로 작업을 처리함으로써 작업의 일관성을 유지함&lt;/li&gt;
  &lt;li&gt;웹 애플리케이션에선 Service 클래스의 각 메서드가 애플리케이션의 단위 기능을 수행&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;웹 애플리케이션의 트랜잭션은 대부분 서비스 클래스에 적용한다.
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;transactional-애너테이션&quot;&gt;@Transactional 애너테이션&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;클래스나 메서드에 붙여줄 경우, 해당 범위 메서드가 트랜잭션이 되도록 보장해준다&lt;/li&gt;
  &lt;li&gt;직접 객체를 만들 필요없이 선언만으로도 관리가 용이해 선언적 트랜잭션이라고도 함&lt;/li&gt;
  &lt;li&gt;일련의 작업들을 묶어서 하나의 단위로 처리하고 싶을때 사용한다&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;스프링-애너테이션annotation&quot;&gt;스프링 애너테이션(Annotation)&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;기존에 XML에서 빈 설정을 애너테이션을 이용해서 자바 코드에서 설정하는 방법&lt;/li&gt;
  &lt;li&gt;기능이 복잡해짐에 따라 XML에서 설정하는 것보다 유지보수에 유리함&lt;/li&gt;
  &lt;li&gt;현재 애플리케이션 개발 시 XML 설정 방법과 애너테이션 방법을 혼합해서 사용함&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;contextcomponent-scan-태그-기능&quot;&gt;&amp;lt;context:component-scan&amp;gt; 태그 기능&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;&amp;lt;context:component-scan&amp;gt; 태그를 사용해 패키지 이름을 지정하면 애플리케이션 실행 시 해당 패키지에서 애너테이션으로 지정된 클래스를 빈으로 만들어 줌&lt;/li&gt;
  &lt;li&gt;사용형식&lt;br /&gt;&amp;lt;context:component-scan base-package=”패키지이름”/&amp;gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;requestmapping요청-매핑&quot;&gt;@RequestMapping(요청 매핑)&lt;/h6&gt;
&lt;p&gt;요청이 왔을 때 어떤 컨트롤러가 호출이 되어야 하는지 알려준다&lt;/p&gt;

&lt;h6 id=&quot;controller&quot;&gt;@Controller&lt;/h6&gt;
&lt;p&gt;스프링 컨테이너가 component-scan에 의해 지정한 클래스를 컨트롤러 빈으로 자동변환 한다&lt;/p&gt;

&lt;h6 id=&quot;service&quot;&gt;@Service&lt;/h6&gt;
&lt;p&gt;스프링 컨테이너가 component-scan에 의해 지정한 클래스를 서비스 빈으로 자동변환 한다&lt;/p&gt;

&lt;h6 id=&quot;repository&quot;&gt;@Repository&lt;/h6&gt;
&lt;p&gt;스프링 컨테이너가 component-scan에 의해 지정한 클래스를 DAO 빈으로 자동변환 한다&lt;/p&gt;

&lt;h6 id=&quot;component&quot;&gt;@Component&lt;/h6&gt;
&lt;p&gt;스프링 컨테이너가 component-scan에 의해 지정한 클래스를 빈으로 자동변환 한다&lt;/p&gt;

&lt;h6 id=&quot;requestparam&quot;&gt;@RequestParam&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;매개변수의 수가 많아지면 일일이 getParameter() 메서드를 이용하는 방법은 불편함&lt;/li&gt;
  &lt;li&gt;@RequestParam을 메서드에 적용해 쉽게 값을 얻을 수 있음&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;@RequestParam의 required 속성을 이용하면 반드시 전달해야하는 필수 매개변수인 경우와 그렇지 않은 경우를 설정할 수 있다.&lt;/p&gt;

&lt;h6 id=&quot;modelattribute&quot;&gt;@ModelAttribute&lt;/h6&gt;
&lt;p&gt;VO 클래스의 속성에 매개변수 값이 자동으로 설정되도록 해준다&lt;/p&gt;

&lt;h6 id=&quot;model-클래스&quot;&gt;Model 클래스&lt;/h6&gt;
&lt;p&gt;따로 뷰 정보를 전달할 필요가 없을때 사용하면 편리하다.&lt;/p&gt;

&lt;h6 id=&quot;autowired&quot;&gt;@Autowired&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;기존 XML 파일에서 각각의 빈을 DI로 주입했던 기능을 코드에서 애너테이션으로 자동으로 수행함&lt;/li&gt;
  &lt;li&gt;@Autowired를 사용하면 별도의 setter나 생성자 없이 속성에 빈을 주입할 수 있음&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Jinho1</name></author><category term="java" /><summary type="html">JAVA 웹을 다루는 기술 - 4장 JAVA 웹을 다루는 기술 - 5장 JAVA 웹을 다루는 기술 - 6,7장 JAVA 웹을 다루는 기술 - 8장 JAVA 웹을 다루는 기술 - 9장 JAVA 웹을 다루는 기술 - 10장 JAVA 웹을 다루는 기술 - 11,12장 JAVA 웹을 다루는 기술 - 13,14장 JAVA 웹을 다루는 기술 - 17장 JAVA 웹을 다루는 기술 - 18,19장 JAVA 웹을 다루는 기술 - 23장 JAVA 웹을 다루는 기술 - 25,26장 JAVA 웹을 다루는 기술 - 27,28장 JAVA 웹을 다루는 기술 - 29장 본 포스팅은 “자바 웹을 다루는 기술/이병승 저” 를 읽고 학습한 내용을 정리한 것입니다.</summary></entry><entry><title type="html">JAVA 웹을 다루는 기술 - 23장</title><link href="https://jeongjinhooo.github.io/javaweb23" rel="alternate" type="text/html" title="JAVA 웹을 다루는 기술 - 23장" /><published>2022-05-13T04:00:00+09:00</published><updated>2022-05-13T04:00:00+09:00</updated><id>https://jeongjinhooo.github.io/javaweb23</id><content type="html" xml:base="https://jeongjinhooo.github.io/javaweb23">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb4&quot;&gt;JAVA 웹을 다루는 기술 - 4장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb5&quot;&gt;JAVA 웹을 다루는 기술 - 5장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb6&quot;&gt;JAVA 웹을 다루는 기술 - 6,7장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb8&quot;&gt;JAVA 웹을 다루는 기술 - 8장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb9&quot;&gt;JAVA 웹을 다루는 기술 - 9장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb10&quot;&gt;JAVA 웹을 다루는 기술 - 10장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb11&quot;&gt;JAVA 웹을 다루는 기술 - 11,12장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb13&quot;&gt;JAVA 웹을 다루는 기술 - 13,14장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb17&quot;&gt;JAVA 웹을 다루는 기술 - 17장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb18&quot;&gt;JAVA 웹을 다루는 기술 - 18,19장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb23&quot;&gt;JAVA 웹을 다루는 기술 - 23장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb25&quot;&gt;JAVA 웹을 다루는 기술 - 25,26장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb27&quot;&gt;JAVA 웹을 다루는 기술 - 27,28장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb29&quot;&gt;JAVA 웹을 다루는 기술 - 29장&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;p&gt;본 포스팅은 “자바 웹을 다루는 기술/이병승 저” 를 읽고 학습한 내용을 정리한 것입니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;마이바티스&quot;&gt;마이바티스&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;SQL 실행 결과를 자바 빈즈 또는 Map 객체에 매핑해 주는 Persisitence 솔루션으로 관리함
&lt;br /&gt; 즉 SQL을 소스 코드가 아닌 XML로 분리함&lt;/li&gt;
  &lt;li&gt;SQL문과 프로그래밍 코드를 분리해서 구현함&lt;/li&gt;
  &lt;li&gt;데이터소스(DataSource) 기능과 트랜잭션 처리 기능을 제공&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;resultType : 한개의 값이나 한개의 레코드를 반환받을때&lt;br /&gt;
resultMap : 여러개의 레코드를 반환받을때&lt;/p&gt;

&lt;h6 id=&quot;마이바티스의-동적-sql문의-특징&quot;&gt;마이바티스의 동적 SQL문의 특징&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;주로 SQL문의 조건절에서 사용&lt;/li&gt;
  &lt;li&gt;조건절(where)에 조건을 동적으로 추가&lt;/li&gt;
  &lt;li&gt;JSTL과 XML 기반으로 동적 SQL문을 작성&lt;/li&gt;
  &lt;li&gt;구성요소 : if, choose(when, otherwise), tirm(where, set), foreach&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;동적-sql문을-구성하는-요소&quot;&gt;동적 SQL문을 구성하는 요소&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;if&lt;/li&gt;
  &lt;li&gt;choose(when, otherwise) : 자바의 switch문과 같은 기능&lt;/li&gt;
  &lt;li&gt;tirm(where, set)&lt;/li&gt;
  &lt;li&gt;foreach : 한번에 여러개의 데이터를 처리할 수 있음&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;sql-태그와-include-태그로-sql문-중복-제거하기&quot;&gt;&amp;lt;sql&amp;gt; 태그와 &amp;lt;include&amp;gt; 태그로 SQL문 중복 제거하기&lt;/h6&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &amp;lt;sql id=&quot;a&quot;&amp;gt;  // 공통 SQL문의 refid를 a로 지정
    &amp;lt;![CDATA[
      select * from t_member
     ]]&amp;gt; 
   &amp;lt;/sql&amp;gt;  

 &amp;lt;include refid=&quot;a&quot; /&amp;gt; // include 태그를 이용해 공통 SQL문을 재사용
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h6 id=&quot;마이바티스에서-오라클-연동해-like-검색하는-방법&quot;&gt;마이바티스에서 오라클 연동해 like 검색하는 방법&lt;/h6&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;name like &apos;%&apos;#{name}&apos;%&apos;          //  오라클에서 사용하는 방법

name like &apos;%&apos; || #{name} || &apos;%&apos;	 // 마이바티스에서 사용하는 방법
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Jinho1</name></author><category term="java" /><summary type="html">JAVA 웹을 다루는 기술 - 4장 JAVA 웹을 다루는 기술 - 5장 JAVA 웹을 다루는 기술 - 6,7장 JAVA 웹을 다루는 기술 - 8장 JAVA 웹을 다루는 기술 - 9장 JAVA 웹을 다루는 기술 - 10장 JAVA 웹을 다루는 기술 - 11,12장 JAVA 웹을 다루는 기술 - 13,14장 JAVA 웹을 다루는 기술 - 17장 JAVA 웹을 다루는 기술 - 18,19장 JAVA 웹을 다루는 기술 - 23장 JAVA 웹을 다루는 기술 - 25,26장 JAVA 웹을 다루는 기술 - 27,28장 JAVA 웹을 다루는 기술 - 29장 본 포스팅은 “자바 웹을 다루는 기술/이병승 저” 를 읽고 학습한 내용을 정리한 것입니다.</summary></entry></feed>