<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="https://jeongjinhooo.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://jeongjinhooo.github.io/" rel="alternate" type="text/html" /><updated>2022-05-21T22:27:55+09:00</updated><id>https://jeongjinhooo.github.io/feed.xml</id><title type="html">Jinhonote</title><subtitle>개발공부블로그</subtitle><entry><title type="html">org.springframework.web.context.ContextLoaderListener의 애플리케이션 리스너를 설정하는 중 오류 발생</title><link href="https://jeongjinhooo.github.io/error2" rel="alternate" type="text/html" title="org.springframework.web.context.ContextLoaderListener의 애플리케이션 리스너를 설정하는 중 오류 발생" /><published>2022-05-19T04:00:00+09:00</published><updated>2022-05-19T04:00:00+09:00</updated><id>https://jeongjinhooo.github.io/error2</id><content type="html" xml:base="https://jeongjinhooo.github.io/error2">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;에러 해결&lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;./error1&quot;&gt;2022-05-16&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./error2&quot;&gt;2022-05-19&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;

&lt;p&gt;전에 하던 예제를 복사해서 Maven 사용 실습하고 있었는데 실행이 안되서 찾아보니&lt;br /&gt;
Maven - Update Project 실행시 maven 라이브러리 경로가 삭제되는 현상이 발생해서 그렇다고한다.&lt;/p&gt;

&lt;h6 id=&quot;문제-해결-방법&quot;&gt;문제 해결 방법&lt;/h6&gt;
&lt;p&gt;프로젝트 우클릭 - properties
Deployment Assembly - Add 버튼 - Java Build Path Entries - Maven Dependencies 선택 - Apply버튼&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/image00/error2.PNG&quot; alt=&quot;Alt text&quot; /&gt;&lt;/p&gt;</content><author><name>Jinho1</name></author><category term="error" /><summary type="html">에러 해결 2022-05-16 2022-05-19</summary></entry><entry><title type="html">JAVA 웹을 다루는 기술 - 27, 28장</title><link href="https://jeongjinhooo.github.io/javaweb27" rel="alternate" type="text/html" title="JAVA 웹을 다루는 기술 - 27, 28장" /><published>2022-05-18T04:00:00+09:00</published><updated>2022-05-18T04:00:00+09:00</updated><id>https://jeongjinhooo.github.io/javaweb27</id><content type="html" xml:base="https://jeongjinhooo.github.io/javaweb27">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb4&quot;&gt;JAVA 웹을 다루는 기술 - 4장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb5&quot;&gt;JAVA 웹을 다루는 기술 - 5장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb6&quot;&gt;JAVA 웹을 다루는 기술 - 6,7장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb8&quot;&gt;JAVA 웹을 다루는 기술 - 8장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb9&quot;&gt;JAVA 웹을 다루는 기술 - 9장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb10&quot;&gt;JAVA 웹을 다루는 기술 - 10장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb11&quot;&gt;JAVA 웹을 다루는 기술 - 11,12장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb13&quot;&gt;JAVA 웹을 다루는 기술 - 13,14장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb17&quot;&gt;JAVA 웹을 다루는 기술 - 17장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb18&quot;&gt;JAVA 웹을 다루는 기술 - 18,19장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb23&quot;&gt;JAVA 웹을 다루는 기술 - 23장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb25&quot;&gt;JAVA 웹을 다루는 기술 - 25,26장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb27&quot;&gt;JAVA 웹을 다루는 기술 - 27장&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;p&gt;본 포스팅은 “자바 웹을 다루는 기술/이병승 저” 를 읽고 학습한 내용을 정리한 것입니다.&lt;/p&gt;

&lt;h3 id=&quot;메이븐maven&quot;&gt;메이븐(Maven)&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;프로젝트 구조와 내용을 기술하는 선언적 접근 방식의 오픈소스 빌드 툴&lt;/li&gt;
  &lt;li&gt;프로젝트 종속 라이브러리들과 그 라이브러리에 의존(Dependency)하는 자원까지 관리할 수 있음&lt;/li&gt;
  &lt;li&gt;프로젝트 전반의 리소스 관리와 설정 파일 그리고 이와 관련된 표준 디렉터리 구조를 처음부터 일관된 형태로 구성하여 관리할 수 있음&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;log4j&quot;&gt;log4j&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;로그 기능을 제공하는 오픈 소스 라이브러리&lt;/li&gt;
  &lt;li&gt;애플리케이션에서 웹 사이트에 접속한 사용자 정보나 각 클래스의 메서드호출 시각 등 여러가지 정보를 로그로 출력해서 관리&lt;/li&gt;
  &lt;li&gt;메이븐에선 프로젝트 생성 시 자동으로 log4j 라이브러리가 설치됨&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;타일즈tiles&quot;&gt;타일즈(tiles)&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;화면의 레이아웃 기능을 제공하는 오픈 소스 라이브러리&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;특징&quot;&gt;특징&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;페이지 레이아웃을 쉽고 단순하게 구현할 수 있음&lt;/li&gt;
  &lt;li&gt;공통된 레이아웃을 사용하므로 유지관리가 용이함&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;commonsmultipartresolver-클래스&quot;&gt;CommonsMultipartResolver 클래스&lt;/h3&gt;
&lt;p&gt;여러 개의 파일을 한꺼번에 업로드할 수 있음&lt;/p&gt;

&lt;h3 id=&quot;인터셉터interceptor&quot;&gt;인터셉터(Interceptor)&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;브라우저요청 시 요청 메서드 호출 전후에 개발자가 원하는 기능을 수행함&lt;/li&gt;
  &lt;li&gt;필터와 기능이 유사하지만 필터보다 좀 더 자유롭게 위치를 변경해서 기능을 수행함&lt;/li&gt;
  &lt;li&gt;쿠키(Cookie) 제어, 파일 업로드 등의 작업을 수행함&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Jinho1</name></author><category term="java" /><summary type="html">JAVA 웹을 다루는 기술 - 4장 JAVA 웹을 다루는 기술 - 5장 JAVA 웹을 다루는 기술 - 6,7장 JAVA 웹을 다루는 기술 - 8장 JAVA 웹을 다루는 기술 - 9장 JAVA 웹을 다루는 기술 - 10장 JAVA 웹을 다루는 기술 - 11,12장 JAVA 웹을 다루는 기술 - 13,14장 JAVA 웹을 다루는 기술 - 17장 JAVA 웹을 다루는 기술 - 18,19장 JAVA 웹을 다루는 기술 - 23장 JAVA 웹을 다루는 기술 - 25,26장 JAVA 웹을 다루는 기술 - 27장 본 포스팅은 “자바 웹을 다루는 기술/이병승 저” 를 읽고 학습한 내용을 정리한 것입니다.</summary></entry><entry><title type="html">조건문</title><link href="https://jeongjinhooo.github.io/algorithm2" rel="alternate" type="text/html" title="조건문" /><published>2022-05-17T04:00:00+09:00</published><updated>2022-05-17T04:00:00+09:00</updated><id>https://jeongjinhooo.github.io/algorithm2</id><content type="html" xml:base="https://jeongjinhooo.github.io/algorithm2">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;백준 문제 연습&lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;./algorithm1&quot;&gt;입출력과 사칙연산&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./algorithm2&quot;&gt;조건문&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;

&lt;h6 id=&quot;문제-1330&quot;&gt;문제 1330&lt;/h6&gt;
&lt;p&gt;&lt;br /&gt;
첫째 줄에 다음 세 가지 중 하나를 출력한다.&lt;/p&gt;

&lt;p&gt;A가 B보다 큰 경우에는 ‘&amp;gt;’를 출력한다.
A가 B보다 작은 경우에는 ‘&amp;lt;’를 출력한다.
A와 B가 같은 경우에는 ‘==’를 출력한다.&lt;/p&gt;

&lt;h6 id=&quot;풀이&quot;&gt;풀이&lt;/h6&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import java.util.Scanner;
public class Main {
 
	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		
		int A = in.nextInt();
		int B = in.nextInt();
		
		in.close();
        
		if(A&amp;gt;B) System.out.println(&quot;&amp;gt;&quot;);
		else if(A&amp;lt;B) System.out.println(&quot;&amp;lt;&quot;);
		else System.out.println(&quot;==&quot;);
	}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h6 id=&quot;문제-9498&quot;&gt;문제 9498&lt;/h6&gt;
&lt;p&gt;&lt;br /&gt;
시험 점수를 입력받아 90 ~ 100점은 A, 80 ~ 89점은 B, 70 ~ 79점은 C, 60 ~ 69점은 D, 나머지 점수는 F를 출력하는 프로그램을 작성하시오.&lt;/p&gt;

&lt;h6 id=&quot;풀이-1&quot;&gt;풀이&lt;/h6&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import java.util.Scanner;
public class Main {
 
	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		
		int A = in.nextInt();
		in.close();
		
		if(A&amp;gt;=90) System.out.println(&quot;A&quot;);
		else if(A&amp;gt;=80) System.out.println(&quot;B&quot;);
		else if (A&amp;gt;=70) System.out.println(&quot;C&quot;);
		else if(A&amp;gt;=60) System.out.println(&quot;D&quot;);
		else System.out.println(&quot;F&quot;);
	}
 
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h6 id=&quot;문제-2753&quot;&gt;문제 2753&lt;/h6&gt;
&lt;p&gt;&lt;br /&gt;
연도가 주어졌을 때, 윤년이면 1, 아니면 0을 출력하는 프로그램을 작성하시오.&lt;br /&gt;
윤년은 연도가 4의 배수이면서, 100의 배수가 아닐 때 또는 400의 배수일 때이다.&lt;/p&gt;

&lt;h6 id=&quot;풀이-2&quot;&gt;풀이&lt;/h6&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import java.util.Scanner;
 
public class Main {
 
	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		
		int y = in.nextInt();
		in.close();
        
		if(y%4==0) {
			if(y%400==0) System.out.println(&quot;1&quot;);
			else if(y%100==0) System.out.println(&quot;0&quot;);
			else System.out.println(&quot;1&quot;);
		}
		else System.out.println(&quot;0&quot;);
	}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h6 id=&quot;문제-14681&quot;&gt;문제 14681&lt;/h6&gt;
&lt;p&gt;&lt;br /&gt;
점 (x, y)의 사분면 번호(1, 2, 3, 4 중 하나)를 출력한다.&lt;/p&gt;

&lt;h6 id=&quot;풀이-3&quot;&gt;풀이&lt;/h6&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import java.util.Scanner;
 
public class Main {
 
	public static void main(String[] args) {
 
		Scanner in = new Scanner(System.in);
        
		int X = in.nextInt();
		int Y = in.nextInt();
		
		if(X &amp;gt; 0) {
			if(Y &amp;gt; 0) {
				System.out.print(1);
			} 
			else {
				System.out.print(4);
			}
		} 
		
		else {
			if(Y &amp;gt; 0) {
				System.out.print(2);
			} 
			else {
				System.out.print(3);
			}
		}
	}
 
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h6 id=&quot;문제-2884&quot;&gt;문제 2884&lt;/h6&gt;
&lt;p&gt;&lt;br /&gt;
첫째 줄에 두 정수 H와 M이 주어진다. (0 ≤ H ≤ 23, 0 ≤ M ≤ 59) 그리고 이것은 현재 상근이가 설정한 놓은 알람 시간 H시 M분을 의미한다.
입력 시간은 24시간 표현을 사용한다. 24시간 표현에서 하루의 시작은 0:0(자정)이고, 끝은 23:59(다음날 자정 1분 전)이다. 시간을 나타낼 때, 불필요한 0은 사용하지 않는다.&lt;/p&gt;

&lt;h6 id=&quot;풀이-4&quot;&gt;풀이&lt;/h6&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import java.util.Scanner;
 
public class Main {
	public static void main(String[] args) {
    
		Scanner in = new Scanner(System.in);
		
		int H = in.nextInt(); // 시
		int M = in.nextInt(); // 분
		in.close();
		
		if(M &amp;lt; 45) {
			H--;		// 시(hour) 1 감소
			M= 60 - (45 - M); 	// 분(min) 감소
			if(H &amp;lt; 0) {
				H = 23;
			}
			System.out.println(H + &quot; &quot; + M);
		}
		else {
			System.out.println(H + &quot; &quot; + (M - 45));
		}
	}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h6 id=&quot;문제-2525&quot;&gt;문제 2525&lt;/h6&gt;
&lt;p&gt;&lt;br /&gt;
첫째 줄에는 현재 시각이 나온다. 현재 시각은 시 A (0 ≤ A ≤ 23) 와 분 B (0 ≤ B ≤ 59)가 정수로 빈칸을 사이에 두고 순서대로 주어진다. 두 번째 줄에는 요리하는 데 필요한 시간 C (0 ≤ C ≤ 1,000)가 분 단위로 주어진다. 
첫째 줄에 종료되는 시각의 시와 분을 공백을 사이에 두고 출력한다. (단, 시는 0부터 23까지의 정수, 분은 0부터 59까지의 정수이다. 디지털 시계는 23시 59분에서 1분이 지나면 0시 0분이 된다.)&lt;/p&gt;

&lt;h6 id=&quot;풀이-5&quot;&gt;풀이&lt;/h6&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import java.util.*;
 
class Main {
      public static void main(String[] args) {
          Scanner sc=new Scanner(System.in);
          int h=sc.nextInt();   // 시
          int m=sc.nextInt();   // 분
          int c =sc.nextInt();  // 요리 시간
          
          m+=c;                 // 분 + 요리 시간
          if(m&amp;gt;=60) {           
              while(m&amp;gt;=60) {   // 60분 넘어가면
                  m-=60;       // 60 빼주고
                  h++;         // 1시간 증가
                  if(h&amp;gt;=24) {  //24 넘으면 0으로 
                      h=0;
                  }
              }
          }
          System.out.println(h+&quot; &quot;+m); //공백두고 출력
}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h6 id=&quot;문제-2480&quot;&gt;문제 2480&lt;/h6&gt;
&lt;p&gt;&lt;br /&gt;
1에서부터 6까지의 눈을 가진 3개의 주사위를 던져서 다음과 같은 규칙에 따라 상금을 받는 게임이 있다.&lt;/p&gt;

&lt;p&gt;같은 눈이 3개가 나오면 10,000원+(같은 눈)×1,000원의 상금을 받게 된다. 
같은 눈이 2개만 나오는 경우에는 1,000원+(같은 눈)×100원의 상금을 받게 된다. 
모두 다른 눈이 나오는 경우에는 (그 중 가장 큰 눈)×100원의 상금을 받게 된다.&lt;br /&gt;
예를 들어, 3개의 눈 3, 3, 6이 주어지면 상금은 1,000+3×100으로 계산되어 1,300원을 받게 된다. 또 3개의 눈이 2, 2, 2로 주어지면 10,000+2×1,000 으로 계산되어 12,000원을 받게 된다. 3개의 눈이 6, 2, 5로 주어지면 그중 가장 큰 값이 6이므로 6×100으로 계산되어 600원을 상금으로 받게 된다.&lt;/p&gt;

&lt;p&gt;3개 주사위의 나온 눈이 주어질 때, 상금을 계산하는 프로그램을 작성 하시오.&lt;/p&gt;
&lt;h6 id=&quot;풀이-6&quot;&gt;풀이&lt;/h6&gt;

&lt;p&gt;~~~&lt;/p&gt;</content><author><name>Jinho1</name></author><category term="algorithm" /><summary type="html">백준 문제 연습 입출력과 사칙연산 조건문</summary></entry><entry><title type="html">JAVA 웹을 다루는 기술 - 25, 26장</title><link href="https://jeongjinhooo.github.io/javaweb25" rel="alternate" type="text/html" title="JAVA 웹을 다루는 기술 - 25, 26장" /><published>2022-05-17T04:00:00+09:00</published><updated>2022-05-17T04:00:00+09:00</updated><id>https://jeongjinhooo.github.io/javaweb25</id><content type="html" xml:base="https://jeongjinhooo.github.io/javaweb25">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb4&quot;&gt;JAVA 웹을 다루는 기술 - 4장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb5&quot;&gt;JAVA 웹을 다루는 기술 - 5장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb6&quot;&gt;JAVA 웹을 다루는 기술 - 6,7장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb8&quot;&gt;JAVA 웹을 다루는 기술 - 8장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb9&quot;&gt;JAVA 웹을 다루는 기술 - 9장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb10&quot;&gt;JAVA 웹을 다루는 기술 - 10장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb11&quot;&gt;JAVA 웹을 다루는 기술 - 11,12장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb13&quot;&gt;JAVA 웹을 다루는 기술 - 13,14장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb17&quot;&gt;JAVA 웹을 다루는 기술 - 17장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb18&quot;&gt;JAVA 웹을 다루는 기술 - 18,19장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb23&quot;&gt;JAVA 웹을 다루는 기술 - 23장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb25&quot;&gt;JAVA 웹을 다루는 기술 - 25,26장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb27&quot;&gt;JAVA 웹을 다루는 기술 - 27장&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;p&gt;본 포스팅은 “자바 웹을 다루는 기술/이병승 저” 를 읽고 학습한 내용을 정리한 것입니다.&lt;/p&gt;

&lt;h3 id=&quot;트랜잭션transaction&quot;&gt;트랜잭션(Transaction)&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;여러 개의 DML 명령문을 하나의 논리적인 작업 단위로 묶어서 관리하는것&lt;/li&gt;
  &lt;li&gt;All 또는 Nothing 방식으로 작업을 처리함으로써 작업의 일관성을 유지함&lt;/li&gt;
  &lt;li&gt;웹 애플리케이션에선 Service 클래스의 각 메서드가 애플리케이션의 단위 기능을 수행&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;웹 애플리케이션의 트랜잭션은 대부분 서비스 클래스에 적용한다.
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;transactional-애너테이션&quot;&gt;@Transactional 애너테이션&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;클래스나 메서드에 붙여줄 경우, 해당 범위 메서드가 트랜잭션이 되도록 보장해준다&lt;/li&gt;
  &lt;li&gt;직접 객체를 만들 필요없이 선언만으로도 관리가 용이해 선언적 트랜잭션이라고도 함&lt;/li&gt;
  &lt;li&gt;일련의 작업들을 묶어서 하나의 단위로 처리하고 싶을때 사용한다&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;스프링-애너테이션annotation&quot;&gt;스프링 애너테이션(Annotation)&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;기존에 XML에서 빈 설정을 애너테이션을 이용해서 자바 코드에서 설정하는 방법&lt;/li&gt;
  &lt;li&gt;기능이 복잡해짐에 따라 XML에서 설정하는 것보다 유지보수에 유리함&lt;/li&gt;
  &lt;li&gt;현재 애플리케이션 개발 시 XML 설정 방법과 애너테이션 방법을 혼합해서 사용함&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;contextcomponent-scan-태그-기능&quot;&gt;&amp;lt;context:component-scan&amp;gt; 태그 기능&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;&amp;lt;context:component-scan&amp;gt; 태그를 사용해 패키지 이름을 지정하면 애플리케이션 실행 시 해당 패키지에서 애너테이션으로 지정된 클래스를 빈으로 만들어 줌&lt;/li&gt;
  &lt;li&gt;사용형식&lt;br /&gt;&amp;lt;context:component-scan base-package=”패키지이름”/&amp;gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;requestmapping요청-매핑&quot;&gt;@RequestMapping(요청 매핑)&lt;/h6&gt;
&lt;p&gt;요청이 왔을 때 어떤 컨트롤러가 호출이 되어야 하는지 알려준다&lt;/p&gt;

&lt;h6 id=&quot;controller&quot;&gt;@Controller&lt;/h6&gt;
&lt;p&gt;스프링 컨테이너가 component-scan에 의해 지정한 클래스를 컨트롤러 빈으로 자동변환 한다&lt;/p&gt;

&lt;h6 id=&quot;service&quot;&gt;@Service&lt;/h6&gt;
&lt;p&gt;스프링 컨테이너가 component-scan에 의해 지정한 클래스를 서비스 빈으로 자동변환 한다&lt;/p&gt;

&lt;h6 id=&quot;repository&quot;&gt;@Repository&lt;/h6&gt;
&lt;p&gt;스프링 컨테이너가 component-scan에 의해 지정한 클래스를 DAO 빈으로 자동변환 한다&lt;/p&gt;

&lt;h6 id=&quot;component&quot;&gt;@Component&lt;/h6&gt;
&lt;p&gt;스프링 컨테이너가 component-scan에 의해 지정한 클래스를 빈으로 자동변환 한다&lt;/p&gt;

&lt;h6 id=&quot;requestparam&quot;&gt;@RequestParam&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;매개변수의 수가 많아지면 일일이 getParameter() 메서드를 이용하는 방법은 불편함&lt;/li&gt;
  &lt;li&gt;@RequestParam을 메서드에 적용해 쉽게 값을 얻을 수 있음&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;@RequestParam의 required 속성을 이용하면 반드시 전달해야하는 필수 매개변수인 경우와 그렇지 않은 경우를 설정할 수 있다.&lt;/p&gt;

&lt;h6 id=&quot;modelattribute&quot;&gt;@ModelAttribute&lt;/h6&gt;
&lt;p&gt;VO 클래스의 속성에 매개변수 값이 자동으로 설정되도록 해준다&lt;/p&gt;

&lt;h6 id=&quot;model-클래스&quot;&gt;Model 클래스&lt;/h6&gt;
&lt;p&gt;따로 뷰 정보를 전달할 필요가 없을때 사용하면 편리하다.&lt;/p&gt;

&lt;h6 id=&quot;autowired&quot;&gt;@Autowired&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;기존 XML 파일에서 각각의 빈을 DI로 주입했던 기능을 코드에서 애너테이션으로 자동으로 수행함&lt;/li&gt;
  &lt;li&gt;@Autowired를 사용하면 별도의 setter나 생성자 없이 속성에 빈을 주입할 수 있음&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Jinho1</name></author><category term="java" /><summary type="html">JAVA 웹을 다루는 기술 - 4장 JAVA 웹을 다루는 기술 - 5장 JAVA 웹을 다루는 기술 - 6,7장 JAVA 웹을 다루는 기술 - 8장 JAVA 웹을 다루는 기술 - 9장 JAVA 웹을 다루는 기술 - 10장 JAVA 웹을 다루는 기술 - 11,12장 JAVA 웹을 다루는 기술 - 13,14장 JAVA 웹을 다루는 기술 - 17장 JAVA 웹을 다루는 기술 - 18,19장 JAVA 웹을 다루는 기술 - 23장 JAVA 웹을 다루는 기술 - 25,26장 JAVA 웹을 다루는 기술 - 27장 본 포스팅은 “자바 웹을 다루는 기술/이병승 저” 를 읽고 학습한 내용을 정리한 것입니다.</summary></entry><entry><title type="html">JAVA 웹을 다루는 기술 - 23장</title><link href="https://jeongjinhooo.github.io/javaweb23" rel="alternate" type="text/html" title="JAVA 웹을 다루는 기술 - 23장" /><published>2022-05-13T04:00:00+09:00</published><updated>2022-05-13T04:00:00+09:00</updated><id>https://jeongjinhooo.github.io/javaweb23</id><content type="html" xml:base="https://jeongjinhooo.github.io/javaweb23">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb4&quot;&gt;JAVA 웹을 다루는 기술 - 4장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb5&quot;&gt;JAVA 웹을 다루는 기술 - 5장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb6&quot;&gt;JAVA 웹을 다루는 기술 - 6,7장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb8&quot;&gt;JAVA 웹을 다루는 기술 - 8장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb9&quot;&gt;JAVA 웹을 다루는 기술 - 9장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb10&quot;&gt;JAVA 웹을 다루는 기술 - 10장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb11&quot;&gt;JAVA 웹을 다루는 기술 - 11,12장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb13&quot;&gt;JAVA 웹을 다루는 기술 - 13,14장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb17&quot;&gt;JAVA 웹을 다루는 기술 - 17장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb18&quot;&gt;JAVA 웹을 다루는 기술 - 18,19장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb23&quot;&gt;JAVA 웹을 다루는 기술 - 23장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb25&quot;&gt;JAVA 웹을 다루는 기술 - 25,26장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb27&quot;&gt;JAVA 웹을 다루는 기술 - 27장&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;p&gt;본 포스팅은 “자바 웹을 다루는 기술/이병승 저” 를 읽고 학습한 내용을 정리한 것입니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;마이바티스&quot;&gt;마이바티스&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;SQL 실행 결과를 자바 빈즈 또는 Map 객체에 매핑해 주는 Persisitence 솔루션으로 관리함
&lt;br /&gt; 즉 SQL을 소스 코드가 아닌 XML로 분리함&lt;/li&gt;
  &lt;li&gt;SQL문과 프로그래밍 코드를 분리해서 구현함&lt;/li&gt;
  &lt;li&gt;데이터소스(DataSource) 기능과 트랜잭션 처리 기능을 제공&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;resultType : 한개의 값이나 한개의 레코드를 반환받을때&lt;br /&gt;
resultMap : 여러개의 레코드를 반환받을때&lt;/p&gt;

&lt;h6 id=&quot;마이바티스의-동적-sql문의-특징&quot;&gt;마이바티스의 동적 SQL문의 특징&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;주로 SQL문의 조건절에서 사용&lt;/li&gt;
  &lt;li&gt;조건절(where)에 조건을 동적으로 추가&lt;/li&gt;
  &lt;li&gt;JSTL과 XML 기반으로 동적 SQL문을 작성&lt;/li&gt;
  &lt;li&gt;구성요소 : if, choose(when, otherwise), tirm(where, set), foreach&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;동적-sql문을-구성하는-요소&quot;&gt;동적 SQL문을 구성하는 요소&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;if&lt;/li&gt;
  &lt;li&gt;choose(when, otherwise) : 자바의 switch문과 같은 기능&lt;/li&gt;
  &lt;li&gt;tirm(where, set)&lt;/li&gt;
  &lt;li&gt;foreach : 한번에 여러개의 데이터를 처리할 수 있음&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;sql-태그와-include-태그로-sql문-중복-제거하기&quot;&gt;&amp;lt;sql&amp;gt; 태그와 &amp;lt;include&amp;gt; 태그로 SQL문 중복 제거하기&lt;/h6&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &amp;lt;sql id=&quot;a&quot;&amp;gt;  // 공통 SQL문의 refid를 a로 지정
    &amp;lt;![CDATA[
      select * from t_member
     ]]&amp;gt; 
   &amp;lt;/sql&amp;gt;  

 &amp;lt;include refid=&quot;a&quot; /&amp;gt; // include 태그를 이용해 공통 SQL문을 재사용
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h6 id=&quot;마이바티스에서-오라클-연동해-like-검색하는-방법&quot;&gt;마이바티스에서 오라클 연동해 like 검색하는 방법&lt;/h6&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;name like &apos;%&apos;#{name}&apos;%&apos;          //  오라클에서 사용하는 방법

name like &apos;%&apos; || #{name} || &apos;%&apos;	 // 마이바티스에서 사용하는 방법
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Jinho1</name></author><category term="java" /><summary type="html">JAVA 웹을 다루는 기술 - 4장 JAVA 웹을 다루는 기술 - 5장 JAVA 웹을 다루는 기술 - 6,7장 JAVA 웹을 다루는 기술 - 8장 JAVA 웹을 다루는 기술 - 9장 JAVA 웹을 다루는 기술 - 10장 JAVA 웹을 다루는 기술 - 11,12장 JAVA 웹을 다루는 기술 - 13,14장 JAVA 웹을 다루는 기술 - 17장 JAVA 웹을 다루는 기술 - 18,19장 JAVA 웹을 다루는 기술 - 23장 JAVA 웹을 다루는 기술 - 25,26장 JAVA 웹을 다루는 기술 - 27장 본 포스팅은 “자바 웹을 다루는 기술/이병승 저” 를 읽고 학습한 내용을 정리한 것입니다.</summary></entry><entry><title type="html">JAVA</title><link href="https://jeongjinhooo.github.io/memo2" rel="alternate" type="text/html" title="JAVA" /><published>2022-05-12T04:00:00+09:00</published><updated>2022-05-12T04:00:00+09:00</updated><id>https://jeongjinhooo.github.io/memo2</id><content type="html" xml:base="https://jeongjinhooo.github.io/memo2">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;./memo1&quot;&gt;SQL 정리&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./memo2&quot;&gt;JAVA 정리&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;

&lt;h3 id=&quot;게터와-세터getter-and-setter&quot;&gt;게터와 세터(getter and setter)&lt;/h3&gt;

&lt;p&gt;getter와 setter는 말 그대로 어떤 오브젝트 혹은 변수의 값을 가져오거나, 설정해주는 역할을 하는 메소드를 말한다.&lt;/p&gt;

&lt;h6 id=&quot;getter&quot;&gt;getter&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;return type은 참조할 맴버변수의 자료형과 일치해야 한다.&lt;/li&gt;
  &lt;li&gt;이름 앞에 get 을 붙이고 뒤에는 리턴할 맴버변수의 이름 혹은 해당 변수를 직관적으로 표현하는 단어가 와야한다.&lt;/li&gt;
  &lt;li&gt;ex) int getLength();&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;setter&quot;&gt;setter&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;return type은 void 혹은 값의 설정 결과를 알려줄 수 있는 type이어야 한다.&lt;/li&gt;
  &lt;li&gt;argument는 수정할 맴버변수와 같은 type이어야 한다.&lt;/li&gt;
  &lt;li&gt;이름 앞에 set을 붙이고 뒤에는 수정할 맴버변수의 이름 혹은 해당 변수를 직관적으로 표현하는 단어이어야 한다.&lt;/li&gt;
  &lt;li&gt;ex) void setLength(int length);&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;override-어노테이션&quot;&gt;@Override 어노테이션&lt;/h3&gt;
&lt;p&gt;상속받은 메서드를 재정의할 때 메서드 이름이 틀리지 않게 쓰기 위한 어노테이션이다&lt;/p&gt;

&lt;h3 id=&quot;cset-태그&quot;&gt;&amp;lt;c:set&amp;gt; 태그&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
&amp;lt;c:set&amp;gt; 태그는 EL에서 사용되어질 수 있는 Bean, Map등에 값을 설정을 하거나, 일반 변수를 생성해서 값을 할당 할 수 있다&lt;/p&gt;

&lt;h3 id=&quot;cset-태그-속성&quot;&gt;&amp;lt;c:set&amp;gt; 태그 속성&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;value 속성 : 값을 입력.  EL을 사용할 수 있다.&lt;/li&gt;
  &lt;li&gt;target 속성 : 프로퍼티를 설정할 빈 또는 맵&lt;/li&gt;
  &lt;li&gt;property 속성 : 설정할 프로퍼티&lt;/li&gt;
  &lt;li&gt;var 속성 : 값이 저장되는 변수명&lt;/li&gt;
  &lt;li&gt;scope 속성 : 변수가 저장된  Scope.&lt;br /&gt; page, request, session, application 을 가질 수 있고, 기본값은 page&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Jinho1</name></author><category term="memo" /><summary type="html">SQL 정리 JAVA 정리</summary></entry><entry><title type="html">JAVA 웹을 다루는 기술 - 18,19장</title><link href="https://jeongjinhooo.github.io/javaweb18" rel="alternate" type="text/html" title="JAVA 웹을 다루는 기술 - 18,19장" /><published>2022-05-07T04:00:00+09:00</published><updated>2022-05-07T04:00:00+09:00</updated><id>https://jeongjinhooo.github.io/javaweb18</id><content type="html" xml:base="https://jeongjinhooo.github.io/javaweb18">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb4&quot;&gt;JAVA 웹을 다루는 기술 - 4장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb5&quot;&gt;JAVA 웹을 다루는 기술 - 5장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb6&quot;&gt;JAVA 웹을 다루는 기술 - 6,7장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb8&quot;&gt;JAVA 웹을 다루는 기술 - 8장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb9&quot;&gt;JAVA 웹을 다루는 기술 - 9장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb10&quot;&gt;JAVA 웹을 다루는 기술 - 10장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb11&quot;&gt;JAVA 웹을 다루는 기술 - 11,12장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb13&quot;&gt;JAVA 웹을 다루는 기술 - 13,14장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb17&quot;&gt;JAVA 웹을 다루는 기술 - 17장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb18&quot;&gt;JAVA 웹을 다루는 기술 - 18,19장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb23&quot;&gt;JAVA 웹을 다루는 기술 - 23장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb25&quot;&gt;JAVA 웹을 다루는 기술 - 25,26장&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./javaweb27&quot;&gt;JAVA 웹을 다루는 기술 - 27장&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;p&gt;본 포스팅은 “자바 웹을 다루는 기술/이병승 저” 를 읽고 학습한 내용을 정리한 것입니다.&lt;/p&gt;
&lt;hr /&gt;

&lt;h4 id=&quot;프레임워크framework&quot;&gt;프레임워크(Framework)&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;사전적의미는 ‘어떤 것을 구성하는 구조 또는 뼈대’&lt;/li&gt;
  &lt;li&gt;소프트웨어적 의미로는 ‘기능을 미리 클래스나 인터페이스 등으로 만들어 제공하는 반제품’&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;프레임워크-장점&quot;&gt;프레임워크 장점&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;일정한 기준에 따라 개발이 이루어지므로 개발 생산성과 품질이 보장된 애플리케이션을 개발할 수 있음&lt;/li&gt;
  &lt;li&gt;개발 후 유지보수 및 기능의 확장성에서도 고품질 보장&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;스프링-프레임워크&quot;&gt;스프링 프레임워크&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;스프링 프레임워크(스프링)는 자바 웹 애플리케이션 개발을 위한 오픈 소스 프레임워크&lt;/li&gt;
  &lt;li&gt;EJB(Enterprise Java Bean)보다 가벼운 경량 프레임워크&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;특징&quot;&gt;특징&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;EJB보다 가볍고 배우기도 쉬우며 경량 컨테이너의 기능을 수행&lt;/li&gt;
  &lt;li&gt;제어 역행(ioC, Inversion of Control) 기술을 이용해 애플리케이션 간의 느슨한 결합을 제어함&lt;/li&gt;
  &lt;li&gt;의존성 주입(DI, Dependency injection) 기능을 지원함&lt;/li&gt;
  &lt;li&gt;관점지향 (AOP, Aspect-Oriented Programming) 기능을 이용해 자원 관리함&lt;/li&gt;
  &lt;li&gt;영속성과 관련된 다양한 서비스를 지원함&lt;/li&gt;
  &lt;li&gt;수많은 라이브러리와의 연동 기능을 지원함&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;컨테이너란&quot;&gt;컨테이너란?&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;톰캣은 서블릿 컨테이너라고 부르는데, 그 이유는 톰캣을 실행하면 톰캣은 서블릿의 생성, 초기화, 서비스실행, 소멸에 관한 모든 권한을 가지고 서블릿을 관리&lt;/li&gt;
  &lt;li&gt;스프링은 애플리케이션에서 사용되는 여러가지 빈(클래스 객체)을 개발자가 아닌 스프링이 권한을 가지고 직접 관리&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Jinho1</name></author><category term="java" /><summary type="html">JAVA 웹을 다루는 기술 - 4장 JAVA 웹을 다루는 기술 - 5장 JAVA 웹을 다루는 기술 - 6,7장 JAVA 웹을 다루는 기술 - 8장 JAVA 웹을 다루는 기술 - 9장 JAVA 웹을 다루는 기술 - 10장 JAVA 웹을 다루는 기술 - 11,12장 JAVA 웹을 다루는 기술 - 13,14장 JAVA 웹을 다루는 기술 - 17장 JAVA 웹을 다루는 기술 - 18,19장 JAVA 웹을 다루는 기술 - 23장 JAVA 웹을 다루는 기술 - 25,26장 JAVA 웹을 다루는 기술 - 27장 본 포스팅은 “자바 웹을 다루는 기술/이병승 저” 를 읽고 학습한 내용을 정리한 것입니다.</summary></entry><entry><title type="html">SQL</title><link href="https://jeongjinhooo.github.io/memo1" rel="alternate" type="text/html" title="SQL" /><published>2022-05-07T04:00:00+09:00</published><updated>2022-05-07T04:00:00+09:00</updated><id>https://jeongjinhooo.github.io/memo1</id><content type="html" xml:base="https://jeongjinhooo.github.io/memo1">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;./memo1&quot;&gt;SQL 정리&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./memo2&quot;&gt;JAVA 정리&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;

&lt;h6 id=&quot;sql-sysdate-함수현재-날짜-시간-구해오기&quot;&gt;SQL SYSDATE 함수(현재 날짜, 시간 구해오기)&lt;/h6&gt;
&lt;p&gt;사용법 : SELECT SYSDATE FROM DUAL;&lt;br /&gt;
Dual 이라는 테이블은 오라클이 설치될 때 만들어지는 테이블이며 산술, 날짜처리, 계산 등을하는 기본 임시 테이블&lt;/p&gt;

&lt;h6 id=&quot;sql-round-floor-ceil-함수&quot;&gt;SQL ROUND, FLOOR, CEIL 함수&lt;/h6&gt;
&lt;p&gt;ROUND - 반올림 &lt;br /&gt;
CEIL  - 올림 &lt;br /&gt;
FLOOR - 버림&lt;/p&gt;

&lt;h6 id=&quot;sql-decode-case-함수&quot;&gt;SQL DECODE, CASE 함수&lt;/h6&gt;
&lt;p&gt;조건에 따라 각각 다른 값을 입력/출력하는 분기함수&lt;br /&gt;
DECODE : A=B이면 X, A≠B이면 Y를 출력 (A와 B가 같은지에 대한 조건)&lt;br /&gt;
CASE : DECODE와 달리, A와 B 사이에 부등호 관계(크거나 작은 조건)를 처리할 때 주로 사용&lt;/p&gt;</content><author><name>Jinho1</name></author><category term="memo" /><summary type="html">SQL 정리 JAVA 정리</summary></entry><entry><title type="html">web.xml에서 발생한 에러</title><link href="https://jeongjinhooo.github.io/error1" rel="alternate" type="text/html" title="web.xml에서 발생한 에러" /><published>2022-05-07T04:00:00+09:00</published><updated>2022-05-07T04:00:00+09:00</updated><id>https://jeongjinhooo.github.io/error1</id><content type="html" xml:base="https://jeongjinhooo.github.io/error1">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;에러 해결&lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;./error1&quot;&gt;2022-05-16&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./error2&quot;&gt;2022-05-19&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;

&lt;p&gt;web.xml에서 발생한 에러
cvc-id.3: A field of identity constraint ‘web-common-servlet-name-uniqueness’ matched element ‘web-app’, but this element does not have a simple type.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;
&amp;lt;web-app xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
	xmlns=&quot;http://java.sun.com/xml/ns/javaee&quot;
	xsi:schemaLocation=&quot;http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd&quot;
	id=&quot;WebApp_ID&quot; version=&quot;3.0&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;xsi:schemaLocation=”http://java.sun.com/xml/ns/javaee에 있는 java를 대문자 JAVA로 바꾸어주면 된다.&lt;/p&gt;</content><author><name>Jinho1</name></author><category term="error" /><summary type="html">에러 해결 2022-05-16 2022-05-19</summary></entry><entry><title type="html">입출력과 사칙연산</title><link href="https://jeongjinhooo.github.io/algorithm1" rel="alternate" type="text/html" title="입출력과 사칙연산" /><published>2022-05-07T04:00:00+09:00</published><updated>2022-05-07T04:00:00+09:00</updated><id>https://jeongjinhooo.github.io/algorithm1</id><content type="html" xml:base="https://jeongjinhooo.github.io/algorithm1">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;백준 문제 연습&lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;./algorithm1&quot;&gt;입출력과 사칙연산&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./algorithm2&quot;&gt;조건문&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h6 id=&quot;문제-2557&quot;&gt;문제 2557&lt;/h6&gt;
&lt;p&gt;&lt;br /&gt;
Hello World!를 출력하시오.&lt;/p&gt;

&lt;h6 id=&quot;풀이&quot;&gt;풀이&lt;/h6&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;public class Main {
	public static void main(String[] args) {
		System.out.print(&quot;Hello World!&quot;);    
	}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;백준 알고리즘에서는 클래스명을 Main으로 해주어야 한다&lt;/p&gt;

&lt;h6 id=&quot;문제-10718&quot;&gt;문제 10718&lt;/h6&gt;
&lt;p&gt;&lt;br /&gt;
두 줄에 걸쳐 “강한친구 대한육군”을 한 줄에 한 번씩 출력한다.&lt;/p&gt;

&lt;h6 id=&quot;풀이-1&quot;&gt;풀이&lt;/h6&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;public class Main {
	
	public static void main(String[] args) {
		System.out.println(&quot;강한친구 대한육군&quot;);
		System.out.println(&quot;강한친구 대한육군&quot;);
	}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;public class Main {
	
	public static void main(String[] args) {
		System.out.println(&quot;강한친구 대한육군\n강한친구 대한육군&quot;);	
	}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;\n 으로 줄바꿈 할수있다&lt;/p&gt;
&lt;h6 id=&quot;문제-10171&quot;&gt;문제 10171&lt;/h6&gt;
&lt;p&gt;&lt;br /&gt;
고양이를 출력한다.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;\    /\
 )  ( &apos;)
(  /  )
 \(__)|
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h6 id=&quot;풀이-2&quot;&gt;풀이&lt;/h6&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;public class Main {
	public static void main(String[] args) {
    
		System.out.println(&quot;\\    /\\&quot;);
		System.out.println(&quot; )  ( &apos;)&quot;);
		System.out.println(&quot;(  /  )&quot;);
		System.out.println(&quot; \\(__)|&quot;);    
 
	}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;public class Main {
	public static void main(String[] args) {
    
	System.out.println(  &quot;\\    /\\\n&quot; + 
		                 &quot; )  ( &apos;)\n&quot; + 
		            	 &quot;(  /  )\n&quot; + 
		            	 &quot; \\(__)|&quot;);
	}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;\는 이스케이프 시퀀시로 사용되는 문자이기 때문에 출력하려면 \\와같이 앞에 \를 하나 붙여야 정상적으로 출력된다&lt;/p&gt;

&lt;h6 id=&quot;문제-25083&quot;&gt;문제 25083&lt;/h6&gt;
&lt;p&gt;&lt;br /&gt;
새싹을 출력한다.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;         ,r&apos;&quot;7
r`-_   ,&apos;  ,/
 \. &quot;. L_r&apos;
   `~\/
      |
      |
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h6 id=&quot;풀이-3&quot;&gt;풀이&lt;/h6&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;public class Main { 
    public static void main(String[] args) {
  System.out.printf(&quot;         ,r&apos;\&quot;7\n&quot;);
  System.out.printf(&quot;r`-_   ,&apos;  ,/\n&quot;);
  System.out.printf(&quot; \\. \&quot;. L_r&apos;\n&quot;);
  System.out.printf(&quot;   `~\\/\n&quot;);
  System.out.printf(&quot;      |\n&quot;);
  System.out.printf(&quot;      |\n&quot;);       
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;’\‘나 &quot;는 앞에 \를 붙여주면 출력이 가능하다&lt;/p&gt;

&lt;h6 id=&quot;문제-1000-1001-10998&quot;&gt;문제 1000, 1001, 10998&lt;/h6&gt;
&lt;p&gt;&lt;br /&gt;
두 정수 A와 B를 입력받은 다음, A+B, A-B, A*B를 출력하는 프로그램을 작성하시오.&lt;/p&gt;

&lt;h6 id=&quot;풀이-4&quot;&gt;풀이&lt;/h6&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int a = sc.nextInt();
		int b = sc.nextInt();
		

		System.out.println(a + b); // A+B
        System.out.println(a - b); // A-B
        System.out.println(a * b); // A*B

	}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h6 id=&quot;문제-1008&quot;&gt;문제 1008&lt;/h6&gt;
&lt;p&gt;&lt;br /&gt;
첫째 줄에 A/B를 출력한다. 실제 정답과 출력값의 절대오차 또는 상대오차가 10-9 이하이면 정답&lt;/p&gt;

&lt;h6 id=&quot;풀이-5&quot;&gt;풀이&lt;/h6&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		Double a = sc.nextDouble();
		Double b = sc.nextDouble();
		

		System.out.println(a/b);
	}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h6 id=&quot;문제-10869&quot;&gt;문제 10869&lt;/h6&gt;
&lt;p&gt;&lt;br /&gt;
첫째 줄에 A+B, 둘째 줄에 A-B, 셋째 줄에 A*B, 넷째 줄에 A/B, 다섯째 줄에 A%B를 출력한다.&lt;/p&gt;

&lt;h6 id=&quot;풀이-6&quot;&gt;풀이&lt;/h6&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int a = sc.nextInt();
		int b = sc.nextInt();
		

		System.out.println(a+b);
        System.out.println(a-b);
        System.out.println(a*b);
        System.out.println(a/b);
        System.out.println(a%b);
	}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h6 id=&quot;문제-10926&quot;&gt;문제 10926&lt;/h6&gt;
&lt;p&gt;&lt;br /&gt;
첫째 줄에 준하의 놀람을 출력한다. 놀람은 아이디 뒤에 ??!를 붙여서 나타낸다.&lt;/p&gt;

&lt;h6 id=&quot;풀이-7&quot;&gt;풀이&lt;/h6&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		String id = sc.next();
		System.out.println(id + &quot;??!&quot;);
		}

	}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h6 id=&quot;문제-18108&quot;&gt;문제 18108&lt;/h6&gt;
&lt;p&gt;&lt;br /&gt;
불기 연도가 주어질 때 이를 서기 연도로 바꿔 주는 프로그램을 작성하시오.
예제) 2541 -&amp;gt; 1998&lt;/p&gt;

&lt;h6 id=&quot;풀이-8&quot;&gt;풀이&lt;/h6&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import java.util.Scanner;

public class Main {
        
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println(sc.nextInt()-543);
        }
    }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h6 id=&quot;문제-10430&quot;&gt;문제 10430&lt;/h6&gt;
&lt;p&gt;&lt;br /&gt;
첫째 줄에 (A+B)%C, 둘째 줄에 ((A%C) + (B%C))%C, 셋째 줄에 (A×B)%C, 넷째 줄에 ((A%C) × (B%C))%C를 출력한다.&lt;/p&gt;

&lt;h6 id=&quot;풀이-9&quot;&gt;풀이&lt;/h6&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int a = sc.nextInt();
		int b = sc.nextInt();
        int c = sc.nextInt();
		
		System.out.println((a+b)%c);
        System.out.println(((a%c)+(b%c))%c);
        System.out.println((a*b)%c);
        System.out.println(((a%c)*(b%c))%c);     
	}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h6 id=&quot;문제-2588&quot;&gt;문제 2588&lt;/h6&gt;
&lt;p&gt;&lt;br /&gt;
(세 자리 수) × (세 자리 수)는 다음과 같은 과정을 통하여 이루어진다.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    472  ----&amp;gt; (1)
   *385  ----&amp;gt; (2)
_______   
   2360  ----&amp;gt; (3)
  3776   ----&amp;gt; (4)
 1416    ----&amp;gt; (5)
_______
 181720  ----&amp;gt; (6)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;(1)과 (2)위치에 들어갈 세 자리 자연수가 주어질 때 (3), (4), (5), (6)위치에 들어갈 값을 구하는 프로그램을 작성하시오.&lt;/p&gt;

&lt;h6 id=&quot;풀이-10&quot;&gt;풀이&lt;/h6&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import java.util.Scanner;
 
public class Main {
 
	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
 
		int A = in.nextInt();   // Scanner을 이용하여 A는 int로
		String B = in.next();   // B는 String 으로 입력받는다
        
		in.close();
 
		System.out.println(A * (B.charAt(2) - &apos;0&apos;));
		System.out.println(A * (B.charAt(1) - &apos;0&apos;));
		System.out.println(A * (B.charAt(0) - &apos;0&apos;));
		//charAt() : 문자열의 인덱스 위치에 있는 문자(Character) 값을 반환한다
		// -&apos;0&apos; 을 해주는 이유 : 우리가 보는 숫자 그대로의 값을 쓰기 위한 것
		System.out.println(A * Integer.parseInt(B));
		//Integer.parseInt()을 통해 문자열을 int형으로 바꿔준다
 
	}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Jinho1</name></author><category term="algorithm" /><summary type="html">백준 문제 연습 입출력과 사칙연산 조건문 문제 2557 Hello World!를 출력하시오.</summary></entry></feed>